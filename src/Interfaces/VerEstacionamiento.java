package Interfaces;

import ManejoArchivos.Archivo;
import Modelo.Vehiculo;
import java.awt.Color;
import java.time.Duration;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.Timer;

/**
 *
 * @author Luis Bizarro
 */
public class VerEstacionamiento extends javax.swing.JFrame {
    
    private javax.swing.JButton[][] espaciosEstacionamiento;
    private Vehiculo[][] vehiculosEstacionamiento;
    private Archivo archivo = new Archivo();
    private String nombreRecurso = "C:\\Users\\andre\\OneDrive\\Documentos\\NetBeansProjects\\Algoritmica II\\Gestor_Estacionamiento\\ParkSmart-Parte_Usuario_Interfaz\\vehiculos.txt";
    private Timer timer;
    private Vehiculo vehiculoSeleccionado;
    private String tipoUsuario; 
    private DateTimeFormatter formateador = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.nnnnnnnnn");
    
    /**
     * Creates new form Plantilla_ParkMain
     */
    
    int xMouse,

    /**
     * Creates new form Plantilla_ParkMain
     */
    yMouse;
    
    public VerEstacionamiento(String tipoUsuario) {
        this.tipoUsuario = tipoUsuario;
        initComponents();
        this.setLocationRelativeTo(null);
        inicializarEstacionamiento(); 
        cargarVehiculosDesdeArchivo();
        cargarVehiculosPeriodicamente();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        labelPark = new javax.swing.JLabel();
        labelSmart = new javax.swing.JLabel();
        panelBotonExit = new javax.swing.JPanel();
        labelExit = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        panelRound1 = new Interfaces.PanelRound();
        panelRound2 = new Interfaces.PanelRound();
        labelEspacio = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        labelPlaca = new javax.swing.JLabel();
        labeltxtPlaca = new javax.swing.JLabel();
        labeltxtTipoVehiculo = new javax.swing.JLabel();
        labelTipoDeVehiculo = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        labeltxtTiempoEstimado = new javax.swing.JLabel();
        labelTiempoEstimado = new javax.swing.JLabel();
        labeltxtTiempoEstimado1 = new javax.swing.JLabel();
        labelTiempoEstimado1 = new javax.swing.JLabel();
        panelRound3 = new Interfaces.PanelRound();
        jButtonRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });

        labelPark.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        labelPark.setForeground(new java.awt.Color(255, 255, 255));
        labelPark.setText("Park");

        labelSmart.setBackground(new java.awt.Color(41, 239, 130));
        labelSmart.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        labelSmart.setForeground(new java.awt.Color(41, 239, 130));
        labelSmart.setText("Smart");

        panelBotonExit.setBackground(new java.awt.Color(204, 204, 204));
        panelBotonExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        panelBotonExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelBotonExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelBotonExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                panelBotonExitMouseExited(evt);
            }
        });

        labelExit.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        labelExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelExit.setText("X");

        javax.swing.GroupLayout panelBotonExitLayout = new javax.swing.GroupLayout(panelBotonExit);
        panelBotonExit.setLayout(panelBotonExitLayout);
        panelBotonExitLayout.setHorizontalGroup(
            panelBotonExitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelExit, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );
        panelBotonExitLayout.setVerticalGroup(
            panelBotonExitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelPark)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelSmart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 818, Short.MAX_VALUE)
                .addComponent(panelBotonExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBotonExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(84, 84, 84))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(labelSmart, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPark, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 50));

        jPanel3.setBackground(new java.awt.Color(243, 243, 243));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound1.setBackground(new java.awt.Color(255, 255, 255));
        panelRound1.setRoundBottomLeft(30);
        panelRound1.setRoundBottomRight(30);
        panelRound1.setRoundTopLeft(30);
        panelRound1.setRoundTopRight(30);
        panelRound1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound2.setBackground(new java.awt.Color(243, 243, 243));
        panelRound2.setRoundBottomLeft(35);
        panelRound2.setRoundBottomRight(35);
        panelRound2.setRoundTopLeft(35);
        panelRound2.setRoundTopRight(35);

        labelEspacio.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        labelEspacio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelEspacio.setText("Espacio N°: XX");

        jSeparator2.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelPlaca.setFont(new java.awt.Font("Roboto Black", 0, 20)); // NOI18N
        labelPlaca.setForeground(new java.awt.Color(160, 170, 247));
        labelPlaca.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPlaca.setText("XXX-XXX");

        labeltxtPlaca.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        labeltxtPlaca.setText("PLACA");

        labeltxtTipoVehiculo.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        labeltxtTipoVehiculo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labeltxtTipoVehiculo.setText("Tipo de vehículo");

        labelTipoDeVehiculo.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        labelTipoDeVehiculo.setForeground(new java.awt.Color(160, 170, 247));
        labelTipoDeVehiculo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTipoDeVehiculo.setText("XXXXXXX");

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labeltxtTiempoEstimado.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        labeltxtTiempoEstimado.setText("Tiempo estimado:");

        labelTiempoEstimado.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        labelTiempoEstimado.setForeground(new java.awt.Color(253, 194, 33));
        labelTiempoEstimado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTiempoEstimado.setText("XX horas");

        labeltxtTiempoEstimado1.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        labeltxtTiempoEstimado1.setText("Tiempo estacionado:");

        labelTiempoEstimado1.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        labelTiempoEstimado1.setForeground(new java.awt.Color(102, 255, 102));
        labelTiempoEstimado1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTiempoEstimado1.setText("xx:xx:xx");

        javax.swing.GroupLayout panelRound2Layout = new javax.swing.GroupLayout(panelRound2);
        panelRound2.setLayout(panelRound2Layout);
        panelRound2Layout.setHorizontalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelEspacio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labeltxtTipoVehiculo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelTipoDeVehiculo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labeltxtTiempoEstimado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelRound2Layout.createSequentialGroup()
                        .addComponent(labeltxtPlaca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(labelTiempoEstimado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labeltxtTiempoEstimado1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelTiempoEstimado1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelRound2Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator2))
                    .addGap(14, 14, 14)))
        );
        panelRound2Layout.setVerticalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(labelEspacio)
                .addGap(41, 41, 41)
                .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labeltxtPlaca)
                    .addComponent(labelPlaca))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labeltxtTipoVehiculo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelTipoDeVehiculo)
                .addGap(41, 41, 41)
                .addComponent(labeltxtTiempoEstimado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelTiempoEstimado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labeltxtTiempoEstimado1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTiempoEstimado1)
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelRound2Layout.createSequentialGroup()
                    .addGap(66, 66, 66)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(134, 134, 134)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(185, Short.MAX_VALUE)))
        );

        panelRound1.add(panelRound2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        panelRound3.setRoundBottomLeft(30);
        panelRound3.setRoundBottomRight(30);
        panelRound3.setRoundTopLeft(30);
        panelRound3.setRoundTopRight(30);

        javax.swing.GroupLayout panelRound3Layout = new javax.swing.GroupLayout(panelRound3);
        panelRound3.setLayout(panelRound3Layout);
        panelRound3Layout.setHorizontalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 680, Short.MAX_VALUE)
        );
        panelRound3Layout.setVerticalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
        );

        panelRound1.add(panelRound3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 40, 680, 370));

        jButtonRegresar.setText("Regresar");
        jButtonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegresarActionPerformed(evt);
            }
        });
        panelRound1.add(jButtonRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPanel3.add(panelRound1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 940, 450));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 980, 490));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        // TODO add your handling code here:
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_jPanel2MouseDragged

    private void panelBotonExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelBotonExitMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_panelBotonExitMouseClicked

    private void panelBotonExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelBotonExitMouseEntered
        // TODO add your handling code here:
        panelBotonExit.setBackground(Color.red);
    }//GEN-LAST:event_panelBotonExitMouseEntered

    private void panelBotonExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelBotonExitMouseExited
        // TODO add your handling code here:
        panelBotonExit.setBackground(new Color(243,243,243));
    }//GEN-LAST:event_panelBotonExitMouseExited

    private void jButtonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegresarActionPerformed
    if (tipoUsuario.equalsIgnoreCase("Administrador")) {
        // Si es un administrador, abrir el menú de administrador
        MenuAdministrador ventanaMenuAdministrador = new MenuAdministrador();
        ventanaMenuAdministrador.setVisible(true);
    } else {
        // Si es un empleado o cualquier otro tipo de usuario, abrir el menú de empleado
        MenuEmpleado ventanaMenuEmpleado = new MenuEmpleado();
        ventanaMenuEmpleado.setVisible(true);
    }
    this.setVisible(false); // Ocultar la ventana actual
    }//GEN-LAST:event_jButtonRegresarActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRegresar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel labelEspacio;
    private javax.swing.JLabel labelExit;
    private javax.swing.JLabel labelPark;
    private javax.swing.JLabel labelPlaca;
    private javax.swing.JLabel labelSmart;
    private javax.swing.JLabel labelTiempoEstimado;
    private javax.swing.JLabel labelTiempoEstimado1;
    private javax.swing.JLabel labelTipoDeVehiculo;
    private javax.swing.JLabel labeltxtPlaca;
    private javax.swing.JLabel labeltxtTiempoEstimado;
    private javax.swing.JLabel labeltxtTiempoEstimado1;
    private javax.swing.JLabel labeltxtTipoVehiculo;
    private javax.swing.JPanel panelBotonExit;
    private Interfaces.PanelRound panelRound1;
    private Interfaces.PanelRound panelRound2;
    private Interfaces.PanelRound panelRound3;
    // End of variables declaration//GEN-END:variables

    // Inicializa los espacios del estacionamiento con su número correspondiente y añade eventos de clic.
    private void inicializarEstacionamiento() {
        int filas = 5;
        int columnas = 6;
        
        espaciosEstacionamiento = new javax.swing.JButton[filas][columnas];
        vehiculosEstacionamiento = new Vehiculo[filas][columnas];
        
        panelRound3.setLayout(new java.awt.GridLayout(filas, columnas, 5, 5));

        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                espaciosEstacionamiento[i][j] = new javax.swing.JButton();
                
                // Asigna el nombre del espacio, por ejemplo, A1, B2
                String nombreEspacio = (char) ('A' + i) + Integer.toString(j + 1);
                espaciosEstacionamiento[i][j].setText(nombreEspacio);
                espaciosEstacionamiento[i][j].setBackground(Color.GREEN);

                final int fila = i;
                final int columna = j;
                espaciosEstacionamiento[i][j].addActionListener(evt -> espacioClicado(fila, columna));

                panelRound3.add(espaciosEstacionamiento[i][j]);
            }
        }
    }

    // Carga los vehículos desde el archivo de texto
    private void cargarVehiculosDesdeArchivo() {
        List<Vehiculo> vehiculos = archivo.listar(nombreRecurso);
    
        for (int i = 0; i < espaciosEstacionamiento.length; i++) {
            for (int j = 0; j < espaciosEstacionamiento[i].length; j++) {
                espaciosEstacionamiento[i][j].setBackground(Color.GREEN);
                espaciosEstacionamiento[i][j].setText((char) ('A' + i) + Integer.toString(j + 1));
                vehiculosEstacionamiento[i][j] = null;
            }
        }

        for (Vehiculo vehiculo : vehiculos) {
            int fila = vehiculo.getFila();
            int columna = vehiculo.getColumna();
            vehiculosEstacionamiento[fila][columna] = vehiculo;
            espaciosEstacionamiento[fila][columna].setText((char) ('A' + fila) + Integer.toString(columna + 1) + " (Ocupado)");
            espaciosEstacionamiento[fila][columna].setBackground(Color.RED);
        }
    }
    
    private void cargarVehiculosPeriodicamente() {
        Timer timer = new Timer(5000, e -> {
            cargarVehiculosDesdeArchivo();
        });
        timer.start();
    }
    
    // Método que se ejecuta al hacer clic en un espacio del estacionamiento
    private void espacioClicado(int fila, int columna) {
        if (timer != null) {
            timer.stop();
        }

        vehiculoSeleccionado = vehiculosEstacionamiento[fila][columna];

        if (vehiculoSeleccionado != null) {
            actualizarTiempoEstacionado();
            labelPlaca.setText(vehiculoSeleccionado.getMatricula());
            labelTipoDeVehiculo.setText(convertirTipo(vehiculoSeleccionado.getTipo()));
            labelTiempoEstimado.setText("2 horas");

            timer = new Timer(1000, e -> actualizarTiempoEstacionado());
            timer.start();

            labelEspacio.setText("FILA " + (char) ('A' + fila) + ", COLUMNA " + (columna + 1));
        } else {
            labelPlaca.setText("XXX-XXX");
            labelTipoDeVehiculo.setText("XXXXXXX");
            labelTiempoEstimado1.setText("00:00:00");
            labelTiempoEstimado.setText("XX horas");
            labelEspacio.setText("Espacio N°: XX");
        }
    }
    
    // Convierte el tipo de vehículo de carácter (c o m) a su representación completa.
    private String convertirTipo(char tipo) {
        switch (tipo) {
            case 'c':
                return "Carro";
            case 'm':
                return "Moto";
            default:
                return "Desconocido";
        }
    }

    // Calcula y actualiza el tiempo que el vehículo lleva estacionado en formato hh:mm:ss.
    private void actualizarTiempoEstacionado() {
        if (vehiculoSeleccionado != null && vehiculoSeleccionado.getHoraEntrada() != null) {
            LocalDateTime horaEntrada = vehiculoSeleccionado.getHoraEntrada();  // Hora leída del archivo
            LocalDateTime horaActual = LocalDateTime.now();  // Hora actual del sistema
            Duration duracion = Duration.between(horaEntrada, horaActual);

            long horas = duracion.toHours();
            long minutos = duracion.toMinutesPart();
            long segundos = duracion.toSecondsPart();

            String tiempoEstacionado = String.format("%02d:%02d:%02d", horas, minutos, segundos);
            labelTiempoEstimado1.setText(tiempoEstacionado);
        } else {
            labelTiempoEstimado1.setText("00:00:00"); // Si no hay vehículo seleccionado
        }
    }
}
